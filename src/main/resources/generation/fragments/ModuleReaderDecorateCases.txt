case OpDecorateId:
case OpDecorate: {
                long target = reader.nextWord();
                Decoration decoration = reader.nextEnumValue(Decoration.values());
                reader.visitDecoration(visitor, decoration, target, wordCount);
        }
        break;

case OpMemberDecorate: {
                long structureType = reader.nextWord();
                long member = reader.nextWord();
                Decoration decoration = reader.nextEnumValue(Decoration.values());
                reader.visitMemberDecoration(visitor, decoration, structureType, member, wordCount);
        }
        break;

case OpGroupDecorate: {
                long decorationGroup = reader.nextWord();
                long[] targets = reader.nextWords(wordCount-2);
                visitor.visitGroupDecoration(decorationGroup, targets);
        }
        break;

case OpGroupMemberDecorate: {
                long decorationGroup = reader.nextWord();
                long[] targets = reader.nextWords(wordCount-2);
                visitor.visitGroupMemberDecoration(decorationGroup, targets);
        }
        break;

case OpExecutionMode: {
                long entryPoint = reader.nextWord();
                ExecutionMode.Type type = reader.nextEnumValue(ExecutionMode.Type.values());
                ExecutionMode mode = reader.readMode(type);
                visitor.visitExecutionMode(entryPoint, mode);
        }
        break;

case OpEntryPoint: {
                int savedPosition = reader.position;
                ExecutionModel model = reader.nextEnumValue(ExecutionModel.values());
                long entryPoint = reader.nextWord();
                String name = reader.nextString();
                int strSize = (reader.position - savedPosition) / 4;
                int interfaceCount = wordCount - strSize - 1;
                long[] interfaces = reader.nextWords(interfaceCount);
                visitor.visitEntryPoint(model, entryPoint, name, interfaces);
            }
        break;