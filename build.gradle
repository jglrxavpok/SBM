import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

group 'org.jglr'
version '1.0-INDEV'

apply plugin: 'java'
apply plugin: "kotlin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "src/main/gen"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
    main.java.srcDirs += 'src/main/kotlin'
}
project.ext.lwjglVersion = '3.1.6'

import org.gradle.internal.os.OperatingSystem

switch ( OperatingSystem.current() ) {
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
}

dependencies {
    compile project(":Flows")
    testCompile "org.lwjgl:lwjgl:${lwjglVersion}"
    testCompile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    testCompile "org.lwjgl:lwjgl-vulkan:${lwjglVersion}"
    testRuntime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
    testRuntime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.beust:klaxon:0.27'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}